use pqc_kyber::{KYBER_CIPHERTEXTBYTES, KYBER_K, KYBER_POLYBYTES, KYBER_PUBLICKEYBYTES, KYBER_SECRETKEYBYTES};

pub const PUBLIC_KEY_BYTES: usize = KYBER_PUBLICKEYBYTES; 
pub const SECRET_KEY_BYTES: usize = KYBER_SECRETKEYBYTES;
pub const CIPHERTEXT_BYTES: usize = KYBER_CIPHERTEXTBYTES; 
pub const STEALTH_ADDRESS_BYTES: usize = KYBER_K*KYBER_POLYBYTES;

pub const NEWHOPE_N: usize = 1024;
pub const NEWHOPE_Q: u16 = 12289;
pub const NEWHOPE_K: u8 = 8;

pub const NEWHOPE_SYMBYTES: usize = 32;
pub const NEWHOPE_POLYBYTES: usize = (14 * NEWHOPE_N) / 8;
pub const NEWHOPE_POLYCOMPRESSEDBYTES: usize = (3 * NEWHOPE_N) / 8;

pub const NEWHOPE_CPAPKE_PUBLICKEYBYTES: usize = NEWHOPE_POLYBYTES + NEWHOPE_SYMBYTES;
pub const NEWHOPE_CPAPKE_SECRETKEYBYTES: usize = NEWHOPE_POLYBYTES;
pub const NEWHOPE_CPAPKE_CIPHERTEXTBYTES: usize = NEWHOPE_POLYBYTES + NEWHOPE_POLYCOMPRESSEDBYTES;

pub const NEWHOPE_CPAKEM_PUBLICKEYBYTES: usize = NEWHOPE_CPAPKE_PUBLICKEYBYTES;
pub const NEWHOPE_CPAKEM_SECRETKEYBYTES: usize = NEWHOPE_CPAPKE_SECRETKEYBYTES;
pub const NEWHOPE_CPAKEM_CIPHERTEXTBYTES: usize = NEWHOPE_CPAPKE_CIPHERTEXTBYTES;

pub const NEWHOPE_CCAKEM_PUBLICKEYBYTES: usize = NEWHOPE_CPAPKE_PUBLICKEYBYTES;
pub const NEWHOPE_CCAKEM_SECRETKEYBYTES: usize = NEWHOPE_CPAPKE_SECRETKEYBYTES + NEWHOPE_CPAPKE_PUBLICKEYBYTES + 2 * NEWHOPE_SYMBYTES;
pub const NEWHOPE_CCAKEM_CIPHERTEXTBYTES: usize = NEWHOPE_CPAPKE_CIPHERTEXTBYTES + NEWHOPE_SYMBYTES;